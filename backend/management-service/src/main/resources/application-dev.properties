# Development Profile Configuration
# Ensure Docker Compose integration is disabled when using external PostgreSQL
spring.docker.compose.enabled=false

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/conversation_ui
spring.datasource.username=conversation_user
spring.datasource.password=conversation_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration for development
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
# Development: Skip validation to avoid migration conflicts
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true
espring.flyway.ignore-missing-migrations=true
spring.flyway.ignore-ignored-migrations=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Server Configuration
server.port=8080

# Development specific logging
logging.level.com.example.demo.management_service=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.flywaydb=INFO

# Service Discovery (for inter-service communication)
app.services.navigation-service.url=http://localhost:8081

# Spring AI Configuration (placeholder - set via environment variables)
spring.ai.openai.api-key=${OPENAI_API_KEY:sk-dummy-key-for-development-only}  # pragma: allowlist secret
spring.ai.openai.chat.enabled=${OPENAI_ENABLED:false}

# Disable Spring AI auto-configuration when not needed
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration
