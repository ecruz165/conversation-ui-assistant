# Production Profile Configuration
# For AWS production environment
# Optimized for performance, security, and reliability

spring.application.name=management-service

# Database Configuration - AWS RDS PostgreSQL (Production)
spring.datasource.url=jdbc:postgresql://${DB_HOST:production-db.cluster-xyz.us-east-1.rds.amazonaws.com}:${DB_PORT:5432}/${DB_NAME:conversation_ui_production}
spring.datasource.username=${DB_USERNAME:conversation_user}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration for Production
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration (Production optimized)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.postgresql.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Flyway Configuration (Production)
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=false
spring.flyway.validate-on-migrate=true
spring.flyway.out-of-order=false
spring.flyway.clean-disabled=true

# Disable Docker Compose integration
spring.docker.compose.enabled=false

# Server Configuration
server.port=8080
server.servlet.context-path=/api/management
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Actuator Configuration (Restricted for production)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=never
management.health.db.enabled=true
management.server.port=8081

# Security Configuration
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true
management.security.enabled=true

# Logging Configuration (Production)
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.flywaydb=WARN
logging.level.com.example.demo=INFO
logging.level.root=WARN

# Service Discovery (AWS production URLs)
app.services.navigation-service.url=http://${NAVIGATION_SERVICE_HOST:navigation-service-prod.internal}:8081

# Spring AI Configuration (Production)
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.enabled=${OPENAI_ENABLED:true}

# AWS Configuration
cloud.aws.region.static=${AWS_REGION:us-east-1}
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}

# Disable development tools
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Performance Configuration
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
