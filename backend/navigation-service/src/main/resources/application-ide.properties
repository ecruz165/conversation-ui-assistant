# IDE Profile Configuration
# For individual module development with minimal dependencies
# Use when working on just the navigation service in isolation

spring.application.name=navigation-service

# Database Configuration - Use shared PostgreSQL on port 5432
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/conversation_ui
spring.r2dbc.username=conversation_user
spring.r2dbc.password=conversation_pass

# JDBC Configuration for Flyway and vector store
spring.datasource.url=jdbc:postgresql://localhost:5432/conversation_ui
spring.datasource.username=conversation_user
spring.datasource.password=conversation_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration (uses JDBC for migrations)
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5432/conversation_ui
spring.flyway.user=conversation_user
spring.flyway.password=conversation_pass
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true

# Docker Compose Configuration (managed by Maven plugin)
spring.docker.compose.enabled=false

# Server Configuration
server.port=8081

# Actuator Configuration (minimal for IDE)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.r2dbc.enabled=true

# Logging Configuration (verbose for development)
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.h2=DEBUG
logging.level.com.example.demo=DEBUG

# Service Discovery (mock endpoints for IDE)
app.services.management-service.url=http://localhost:8080

# Spring AI Configuration (disabled for IDE)
spring.ai.openai.api-key=ide-dummy-key
spring.ai.openai.chat.enabled=false

# Disable Spring AI auto-configuration for IDE
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration,org.springframework.ai.vectorstore.pgvector.autoconfigure.PgVectorStoreAutoConfiguration,org.springframework.ai.model.chat.memory.repository.jdbc.autoconfigure.JdbcChatMemoryRepositoryAutoConfiguration

# WebFlux Configuration (for reactive web)
spring.webflux.base-path=/

# Development tools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# Enable WebSocket for IDE with audio support
app.websocket.enabled=true

# WebSocket Configuration for Audio Support (IDE Development)
# Max frame size: 2MB (supports ~30 seconds of audio)
app.websocket.max-frame-size=2097152
# Max content length: 5MB (supports ~60+ seconds of audio)
app.websocket.max-content-length=5242880
