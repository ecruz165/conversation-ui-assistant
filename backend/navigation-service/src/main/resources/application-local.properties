# Local Profile Configuration
# For local integration testing with all modules running on localhost
# Use when testing the complete system locally

spring.application.name=navigation-service

# Database Configuration (R2DBC for reactive)
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/conversation_ui
spring.r2dbc.username=conversation_user
spring.r2dbc.password=conversation_pass

# JDBC Configuration for Flyway and vector store
spring.datasource.url=jdbc:postgresql://localhost:5432/conversation_ui
spring.datasource.username=conversation_user
spring.datasource.password=conversation_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration (uses JDBC for migrations)
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5432/conversation_ui
spring.flyway.user=conversation_user
spring.flyway.password=conversation_pass
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=false
spring.flyway.out-of-order=true

# Disable Docker Compose integration (using external PostgreSQL)
spring.docker.compose.enabled=false

# Server Configuration
server.port=8081

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.r2dbc.enabled=true

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.springframework.r2dbc=WARN
logging.level.org.flywaydb=INFO
logging.level.com.example.demo=DEBUG

# Service Discovery (localhost URLs)
app.services.management-service.url=http://localhost:8080

# Spring AI Configuration
spring.ai.openai.api-key=${OPENAI_API_KEY:local-dummy-key}
spring.ai.openai.chat.enabled=${OPENAI_ENABLED:false}

# Disable Spring AI auto-configuration when not needed
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration,org.springframework.ai.vectorstore.pgvector.autoconfigure.PgVectorStoreAutoConfiguration

# WebFlux Configuration (for reactive web)
spring.webflux.base-path=/

# Development tools (enabled for local development)
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# CORS Configuration for local frontend development
spring.webflux.cors.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:3002
spring.webflux.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.webflux.cors.allowed-headers=*
spring.webflux.cors.allow-credentials=true

# WebSocket Configuration
app.websocket.enabled=true
app.websocket.allowed-origins=http://localhost:3000,http://localhost:3001,http://localhost:3002
