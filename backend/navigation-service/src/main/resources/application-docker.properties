spring.application.name=navigation-service

# Database Configuration (Docker internal networking - R2DBC for reactive)
spring.r2dbc.url=r2dbc:postgresql://postgres:5432/conversation_ui
spring.r2dbc.username=conversation_user
spring.r2dbc.password=conversation_pass

# JDBC Configuration for Flyway and vector store
spring.datasource.url=jdbc:postgresql://postgres:5432/conversation_ui
spring.datasource.username=conversation_user
spring.datasource.password=conversation_pass
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration (uses JDBC for migrations)
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://postgres:5432/conversation_ui
spring.flyway.user=conversation_user
spring.flyway.password=conversation_pass
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.ignore-migration-patterns=*:missing

# Docker Compose Configuration (disabled in container)
spring.docker.compose.enabled=false

# Server Configuration
server.port=8081

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.health.r2dbc.enabled=true

# Logging Configuration
logging.level.org.springframework.web=INFO
logging.level.org.springframework.r2dbc=WARN
logging.level.org.flywaydb=INFO

# Spring AI Configuration (placeholder - set via environment variables)
spring.ai.openai.api-key=${OPENAI_API_KEY:sk-dummy-key-for-development-only}
spring.ai.openai.chat.enabled=${OPENAI_ENABLED:false}

# Disable Spring AI auto-configuration when not needed
spring.autoconfigure.exclude=org.springframework.ai.autoconfigure.openai.OpenAiAutoConfiguration,org.springframework.ai.vectorstore.pgvector.autoconfigure.PgVectorStoreAutoConfiguration,org.springframework.ai.model.chat.memory.repository.jdbc.autoconfigure.JdbcChatMemoryRepositoryAutoConfiguration

# Service Discovery (for inter-service communication)
app.services.management-service.url=http://management-service:8080

# WebFlux Configuration (for reactive web)
spring.webflux.base-path=/

# WebSocket Configuration for Audio Support
# Max frame size: 2MB (supports ~30 seconds of audio)
app.websocket.max-frame-size=2097152
# Max content length: 5MB (supports ~60+ seconds of audio)
app.websocket.max-content-length=5242880

# Netty WebSocket Configuration
server.netty.max-chunk-size=2097152
server.netty.max-initial-line-length=4096

# Spring WebFlux WebSocket Configuration
spring.webflux.websocket.max-frame-payload-length=2097152
spring.webflux.websocket.max-text-message-buffer-size=2097152
spring.webflux.websocket.max-binary-message-buffer-size=2097152
