# Docker Compose for Demo App Development
# Launches both backend services and PostgreSQL for full demo testing

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: demo-app-postgres
    environment:
      POSTGRES_DB: conversation_ui
      POSTGRES_USER: conversation_user
      POSTGRES_PASSWORD: conversation_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U conversation_user -d conversation_ui"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - demo-app-network

  # Management Service
  management-service:
    build:
      context: ../../backend/management-service
      dockerfile: Dockerfile
      target: builder
    container_name: demo-app-management
    environment:
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: conversation_ui
      DB_USERNAME: conversation_user
      DB_PASSWORD: conversation_pass
      OPENAI_API_KEY: ${OPENAI_API_KEY:-demo-dummy-key}
      OPENAI_ENABLED: ${OPENAI_ENABLED:-false}
    ports:
      - "8080:8080"
      - "8081:8081"  # Management/Actuator port
    volumes:
      - ../../backend/management-service/src:/app/src:ro
      - ../../backend/management-service/target:/app/target
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - demo-app-network

  # Navigation Service
  navigation-service:
    build:
      context: ../../backend/navigation-service
      dockerfile: Dockerfile
      target: builder
    container_name: demo-app-navigation
    environment:
      SPRING_PROFILES_ACTIVE: local
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: conversation_ui
      DB_USERNAME: conversation_user
      DB_PASSWORD: conversation_pass
      OPENAI_API_KEY: ${OPENAI_API_KEY:-demo-dummy-key}
      OPENAI_ENABLED: ${OPENAI_ENABLED:-false}
    ports:
      - "8082:8081"  # Different external port to avoid conflicts
      - "8083:8082"  # Management/Actuator port
    volumes:
      - ../../backend/navigation-service/src:/app/src:ro
      - ../../backend/navigation-service/target:/app/target
    depends_on:
      postgres:
        condition: service_healthy
      management-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - demo-app-network

volumes:
  postgres_data:
    driver: local

networks:
  demo-app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16
